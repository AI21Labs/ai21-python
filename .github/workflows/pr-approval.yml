name: PR Approval Handler

on:
  pull_request_review:
    types: [submitted]

env:
  POETRY_VERSION: "1.8"
  POETRY_URL: https://install.python-poetry.org

jobs:
  handle-approval:
    if: github.event.review.state == 'APPROVED'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      statuses: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Add lgtm label
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: lgtm

      - name: Install Poetry
        run: |
          pipx install poetry==1.8

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: poetry
          cache-dependency-path: poetry.lock

      - name: Set Poetry environment
        run: |
          poetry env use 3.11
          poetry cache clear --all pypi

      - name: Install dependencies
        run: |
          poetry install --all-extras

      - name: Set status to pending
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ github.event.pull_request.head.sha }}',
              state: 'pending',
              context: 'Integration Tests (PR Approved)',
              description: 'Integration tests are running after approval'
            })

      - name: Run Integration Tests
        env:
          AI21_API_KEY: ${{ secrets.AI21_API_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          poetry run pytest tests/integration_tests/

      - name: Set status to success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ github.event.pull_request.head.sha }}',
              state: 'success',
              context: 'Integration Tests (PR Approved)',
              description: 'Integration tests passed after approval'
            })

      - name: Set status to failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ github.event.pull_request.head.sha }}',
              state: 'failure',
              context: 'Integration Tests (PR Approved)',
              description: 'Integration tests failed after approval'
            })

      - name: Upload pytest integration tests results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-pr-approval
          path: junit/test-results-*.xml
        if: always()

      - name: Auto-merge PR
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              merge_method: 'squash'
            })
